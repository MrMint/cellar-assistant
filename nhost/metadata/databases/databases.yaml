- name: default
  kind: postgres
  configuration:
    connection_info:
      database_url:
        from_env: HASURA_GRAPHQL_DATABASE_URL
      isolation_level: read-committed
      pool_settings:
        connection_lifetime: 600
        idle_timeout: 180
        max_connections: 50
        retries: 1
      use_prepared_statements: true
  logical_models:
    - fields:
        - name: beer_id
          type:
            nullable: true
            scalar: uuid
        - name: wine_id
          type:
            nullable: true
            scalar: uuid
        - name: spirit_id
          type:
            nullable: true
            scalar: uuid
        - name: coffee_id
          type:
            nullable: true
            scalar: uuid
        - name: distance
          type:
            nullable: true
            scalar: float8
      name: image_search_result
      select_permissions:
        - permission:
            columns:
              - beer_id
              - wine_id
              - spirit_id
              - coffee_id
              - distance
            filter: {}
          role: user
    - fields:
        - name: beer_id
          type:
            nullable: true
            scalar: uuid
        - name: wine_id
          type:
            nullable: true
            scalar: uuid
        - name: spirit_id
          type:
            nullable: true
            scalar: uuid
        - name: coffee_id
          type:
            nullable: true
            scalar: uuid
        - name: score
          type:
            nullable: true
            scalar: float8
        - name: count
          type:
            nullable: false
            scalar: bigint
        - name: type
          type:
            nullable: false
            scalar: text
      name: item_score
      select_permissions:
        - permission:
            columns:
              - beer_id
              - wine_id
              - spirit_id
              - coffee_id
              - score
              - count
              - type
            filter: {}
          role: user
  native_queries:
    - arguments:
        image:
          description: ""
          nullable: false
          type: text
      code: SELECT DISTINCT ON (beer_id, wine_id, spirit_id, coffee_id) *, vector <=> {{image}}::vector AS distance FROM public.item_image ORDER BY beer_id, wine_id, spirit_id, coffee_id, distance
      object_relationships:
        - name: beer
          using:
            column_mapping:
              beer_id: id
            insertion_order: null
            remote_table:
              name: beers
              schema: public
        - name: coffee
          using:
            column_mapping:
              coffee_id: id
            insertion_order: null
            remote_table:
              name: coffees
              schema: public
        - name: spirit
          using:
            column_mapping:
              spirit_id: id
            insertion_order: null
            remote_table:
              name: spirits
              schema: public
        - name: wine
          using:
            column_mapping:
              wine_id: id
            insertion_order: null
            remote_table:
              name: wines
              schema: public
      returns: image_search_result
      root_field_name: image_search
    - arguments:
        reviewers:
          description: ""
          nullable: true
          type: text
      code: |-
        SELECT beer_id, wine_id, spirit_id, coffee_id, AVG(score) as score, COUNT(*) as count, CASE WHEN (beer_id IS NOT NULL) THEN 'BEER'::text WHEN (wine_id IS NOT NULL) THEN 'WINE'::text WHEN (coffee_id IS NOT NULL) THEN 'COFFEE'::text ELSE 'SPIRIT'::text END as type
        FROM item_reviews
        WHERE CASE
        WHEN cardinality({{reviewers}}::UUID[]) = 0 THEN true
        ELSE user_id = ANY ({{reviewers}}::UUID[])
        END
        GROUP BY (beer_id, wine_id, spirit_id, coffee_id)
        -- Do not have access to session variables (user_id) in native queries
        -- https://github.com/hasura/graphql-engine/issues/9915
      object_relationships:
        - name: beer
          using:
            column_mapping:
              beer_id: id
            insertion_order: null
            remote_table:
              name: beers
              schema: public
        - name: coffee
          using:
            column_mapping:
              coffee_id: id
            insertion_order: null
            remote_table:
              name: coffees
              schema: public
        - name: spirit
          using:
            column_mapping:
              spirit_id: id
            insertion_order: null
            remote_table:
              name: spirits
              schema: public
        - name: wine
          using:
            column_mapping:
              wine_id: id
            insertion_order: null
            remote_table:
              name: wines
              schema: public
      returns: item_score
      root_field_name: item_scores
    - arguments:
        text:
          description: ""
          nullable: false
          type: text
      code: SELECT DISTINCT ON (beer_id, wine_id, spirit_id, coffee_id) *, vector <=> {{text}}::vector AS distance FROM public.item_vectors ORDER BY beer_id, wine_id, spirit_id, coffee_id, distance
      object_relationships:
        - name: beer
          using:
            column_mapping:
              beer_id: id
            insertion_order: null
            remote_table:
              name: beers
              schema: public
        - name: coffee
          using:
            column_mapping:
              coffee_id: id
            insertion_order: null
            remote_table:
              name: coffees
              schema: public
        - name: spirit
          using:
            column_mapping:
              spirit_id: id
            insertion_order: null
            remote_table:
              name: spirits
              schema: public
        - name: wine
          using:
            column_mapping:
              wine_id: id
            insertion_order: null
            remote_table:
              name: wines
              schema: public
      returns: image_search_result
      root_field_name: text_search
  tables: "!include default/tables/tables.yaml"
